{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap bc8effc6d2fae100f92b","webpack:///./src/index.js"],"names":["colors","black","red","green","blue","fontWeights","bold","normal","blackTitle","blackText","greenTitle","greenText","redTitle","redText","blueTitle","blueText","logger","state","action","prev","payload","next","console","group","Date","toISOString","log","groupEnd"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;ACtCA;;;;AAIA,KAAMA,SAAc;AAClBC,yBADkB;AAElBC,yBAFkB;AAGlBC,wBAHkB;AAIlBC;AAJkB,EAApB;AAAA,KAMMC,cAAc;AACZC,6BADY;AAEZC;AAFY,EANpB;;AAWA,KAAMC,aAAgBR,OAAOC,KAAvB,SAAgCI,YAAYC,IAAlD;AAAA,KACMG,YAAgBT,OAAOC,KAAvB,SAAgCI,YAAYE,MADlD;AAAA,KAEMG,aAAgBV,OAAOG,KAAvB,SAAgCE,YAAYC,IAFlD;AAAA,KAGMK,YAAgBX,OAAOG,KAAvB,SAAgCE,YAAYE,MAHlD;AAAA,KAIMK,WAAgBZ,OAAOE,GAAvB,SAA8BG,YAAYC,IAJhD;AAAA,KAKMO,UAAgBb,OAAOE,GAAvB,SAA8BG,YAAYE,MALhD;AAAA,KAMMO,YAAgBd,OAAOI,IAAvB,SAA+BC,YAAYC,IANjD;AAAA,KAOMS,WAAgBf,OAAOI,IAAvB,SAA+BC,YAAYE,MAPjD;;AASA,KAAMS,SAAS,SAATA,MAAS,OAA0C;AAAA,OAAxCC,KAAwC,QAAxCA,KAAwC;AAAA,OAAjCC,MAAiC,QAAjCA,MAAiC;AAAA,OAAzBC,IAAyB,QAAzBA,IAAyB;AAAA,OAAnBC,OAAmB,QAAnBA,OAAmB;AAAA,OAAVC,IAAU,QAAVA,IAAU;;AACvDC,WAAQA,QAAQC,KAAR,GAAgB,OAAhB,GAA0B,KAAlC,kBAAuDN,KAAvD,uBAA8EC,MAA9E,qBAAoG,IAAIM,IAAJ,GAAWC,WAAX,EAApG,EACId,SADJ,EACeD,UADf,EAC2BK,QAD3B,EACqCD,SADrC,EACgDL,SADhD,EAC2DD,UAD3D;AAEAc,WAAQI,GAAR,sBAAiCd,QAAjC,EAA2CO,IAA3C;AACAG,WAAQI,GAAR,eAA0BlB,UAA1B,EAAsCY,OAAtC;AACAE,WAAQI,GAAR,kBAA6BZ,SAA7B,EAAwCO,IAAxC;AACAC,WAAQC,KAAR,IAAiBD,QAAQK,QAAR,EAAjB;AACD,EAPD;;mBASeX,M","file":"thrux-logger.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"thrux-logger\"] = factory();\n\telse\n\t\troot[\"thrux-logger\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bc8effc6d2fae100f92b","/**\n * Created by thram on 27/01/17.\n */\n\nconst colors      = {\n  black: `color: black;`,\n  red  : `color: crimson;`,\n  green: `color: teal;`,\n  blue : `color: cornflowerblue;`\n},\n      fontWeights = {\n        bold  : `font-weight: bold;`,\n        normal: `font-weight: normal;`\n      };\n\nconst blackTitle = `${colors.black} ${fontWeights.bold}`,\n      blackText  = `${colors.black} ${fontWeights.normal}`,\n      greenTitle = `${colors.green} ${fontWeights.bold}`,\n      greenText  = `${colors.green} ${fontWeights.normal}`,\n      redTitle   = `${colors.red} ${fontWeights.bold}`,\n      redText    = `${colors.red} ${fontWeights.normal}`,\n      blueTitle  = `${colors.blue} ${fontWeights.bold}`,\n      blueText   = `${colors.blue} ${fontWeights.normal}`;\n\nconst logger = ({state, action, prev, payload, next}) => {\n  console[console.group ? 'group' : 'log'](`%cState: %c${state} - %cAction: %c${action} - %cTime: %c${new Date().toISOString()}`,\n      greenText, greenTitle, blueText, blueTitle, blackText, blackTitle);\n  console.log(`%cPrevious State:`, redTitle, prev);\n  console.log(`%cPayload:`, blackTitle, payload);\n  console.log(`%cNext State:`, blueTitle, next);\n  console.group && console.groupEnd();\n};\n\nexport default logger;\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}